// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.26.1
// source: twitchstream.proto

package models

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Stream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId       string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName     string   `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	GameId       string   `protobuf:"bytes,4,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Type         string   `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Title        string   `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	ViewerCount  int32    `protobuf:"varint,7,opt,name=viewer_count,json=viewerCount,proto3" json:"viewer_count,omitempty"`
	StartedAt    string   `protobuf:"bytes,8,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	Language     string   `protobuf:"bytes,9,opt,name=language,proto3" json:"language,omitempty"`
	ThumbnailUrl string   `protobuf:"bytes,10,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"`
	TagIds       []string `protobuf:"bytes,11,rep,name=tag_ids,json=tagIds,proto3" json:"tag_ids,omitempty"`
	IsMature     bool     `protobuf:"varint,12,opt,name=is_mature,json=isMature,proto3" json:"is_mature,omitempty"`
}

func (x *Stream) Reset() {
	*x = Stream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_twitchstream_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stream) ProtoMessage() {}

func (x *Stream) ProtoReflect() protoreflect.Message {
	mi := &file_twitchstream_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stream.ProtoReflect.Descriptor instead.
func (*Stream) Descriptor() ([]byte, []int) {
	return file_twitchstream_proto_rawDescGZIP(), []int{0}
}

func (x *Stream) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Stream) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Stream) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Stream) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *Stream) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Stream) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Stream) GetViewerCount() int32 {
	if x != nil {
		return x.ViewerCount
	}
	return 0
}

func (x *Stream) GetStartedAt() string {
	if x != nil {
		return x.StartedAt
	}
	return ""
}

func (x *Stream) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *Stream) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

func (x *Stream) GetTagIds() []string {
	if x != nil {
		return x.TagIds
	}
	return nil
}

func (x *Stream) GetIsMature() bool {
	if x != nil {
		return x.IsMature
	}
	return false
}

type Top100StreamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*Stream `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *Top100StreamsResponse) Reset() {
	*x = Top100StreamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_twitchstream_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Top100StreamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Top100StreamsResponse) ProtoMessage() {}

func (x *Top100StreamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_twitchstream_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Top100StreamsResponse.ProtoReflect.Descriptor instead.
func (*Top100StreamsResponse) Descriptor() ([]byte, []int) {
	return file_twitchstream_proto_rawDescGZIP(), []int{1}
}

func (x *Top100StreamsResponse) GetData() []*Stream {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_twitchstream_proto protoreflect.FileDescriptor

var file_twitchstream_proto_rawDesc = []byte{
	0x0a, 0x12, 0x74, 0x77, 0x69, 0x74, 0x63, 0x68, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x22, 0xca, 0x02, 0x0a,
	0x06, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c,
	0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x67, 0x49, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x73, 0x5f, 0x6d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x69, 0x73, 0x4d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x3b, 0x0a, 0x15, 0x54, 0x6f, 0x70,
	0x31, 0x30, 0x30, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x42, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x69, 0x63, 0x68, 0x61, 0x65, 0x6c, 0x66, 0x69, 0x6f, 0x72,
	0x65, 0x74, 0x74, 0x69, 0x2f, 0x74, 0x77, 0x69, 0x74, 0x63, 0x68, 0x2d, 0x73, 0x74, 0x61, 0x74,
	0x73, 0x2d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_twitchstream_proto_rawDescOnce sync.Once
	file_twitchstream_proto_rawDescData = file_twitchstream_proto_rawDesc
)

func file_twitchstream_proto_rawDescGZIP() []byte {
	file_twitchstream_proto_rawDescOnce.Do(func() {
		file_twitchstream_proto_rawDescData = protoimpl.X.CompressGZIP(file_twitchstream_proto_rawDescData)
	})
	return file_twitchstream_proto_rawDescData
}

var file_twitchstream_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_twitchstream_proto_goTypes = []interface{}{
	(*Stream)(nil),                // 0: models.Stream
	(*Top100StreamsResponse)(nil), // 1: models.Top100StreamsResponse
}
var file_twitchstream_proto_depIdxs = []int32{
	0, // 0: models.Top100StreamsResponse.data:type_name -> models.Stream
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_twitchstream_proto_init() }
func file_twitchstream_proto_init() {
	if File_twitchstream_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_twitchstream_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_twitchstream_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Top100StreamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_twitchstream_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_twitchstream_proto_goTypes,
		DependencyIndexes: file_twitchstream_proto_depIdxs,
		MessageInfos:      file_twitchstream_proto_msgTypes,
	}.Build()
	File_twitchstream_proto = out.File
	file_twitchstream_proto_rawDesc = nil
	file_twitchstream_proto_goTypes = nil
	file_twitchstream_proto_depIdxs = nil
}
